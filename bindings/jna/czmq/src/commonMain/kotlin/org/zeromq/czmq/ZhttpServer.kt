/*
################################################################################
#  THIS FILE IS 100% GENERATED BY ZPROJECT; DO NOT EDIT EXCEPT EXPERIMENTALLY  #
#  Read the zproject/README.md for information about making permanent changes. #
################################################################################
*/
package org.zeromq.czmq

import com.sun.jna.Library
import com.sun.jna.Native
import com.sun.jna.Pointer

class ZhttpServer {

//    static {
//        Map<String, Boolean> libraries = new LinkedHashMap<>()
//        libraries.put("zmq", false)
//        libraries.put("uuid", true)
//        libraries.put("systemd", true)
//        libraries.put("lz4", true)
//        libraries.put("curl", true)
//        libraries.put("nss", true)
//        libraries.put("microhttpd", true)
//        libraries.put("czmq", false)
//        libraries.put("czmqjni", false)
//        ZmqNativeLoader.loadLibraries(libraries)
//    }

    private interface NativeLib : Library {
        fun zhttp_server_new(options: Pointer): Pointer
        fun destroy(self: Pointer)
        fun zhttp_server_port(self: Pointer): Int
        fun zhttp_server_test(verbose: Boolean): Unit
    }

    companion object {
        private val nativeLib: NativeLib =
            Native.load("czmq", NativeLib::class.java)

    /**
     * Self test of this class.
     */
    fun test(verbose: Boolean): Unit {
        nativeLib.zhttp_server_test(verbose)
    }

    }

    var self: Pointer

    /**
     * Create a new http server
     */
    constructor(options: ZhttpServerOptions) {
        /*  TODO: if __new fails, self is null...            */
        self = nativeLib.zhttp_server_new(options.self)
    }

    constructor(pointer: Pointer) {
        self = pointer
    }

    /**
     * Destroy an http server
     */
//    @Override
//    public void close () {
//        nativeLib.zhttp_server_destroy(self)
//        self = 0
//    }
//
    /**
     * Return the port the server is listening on.
     */
    fun port(): Int {
        return nativeLib.zhttp_server_port(self)
    }

}
